{"version":3,"file":"static/js/495.390e528f.chunk.js","mappings":"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","sources":["api/sheet.ts","component/SheetPage/SheetSummary.tsx","component/SheetPage/SheetTable.tsx","constant/constant.ts","component/Button/RefreshButton.tsx","page/SheetPage.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["import Axios from 'axios'\nimport { SheetDataInterface } from '../page/SheetPage'\n\nconst axiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_API_URL + 'accountBook/sheet/',\n  withCredentials: true,\n})\n\nexport const getSheets = async () => {\n  let res = await axiosInstance.get<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const getSheet = async (sheetId: number) => {\n  let res = await axiosInstance.get<SheetDataInterface>(`${sheetId}`)\n  return res.data\n}\n\nexport const postSheets = async () => {\n  let res = await axiosInstance.post<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const patchSheet = async (\n  sheetId: number,\n  sheetData: SheetDataInterface,\n) => {\n  let res = await axiosInstance.patch<SheetDataInterface>(\n    `${sheetId}`,\n    sheetData,\n  )\n  return res.data\n}\n\n// sheet 순서 변경\nexport const patchOrder = async (orderData: sheetOrderInterface) => {\n  let res = await axiosInstance.patch(\n    `${orderData.fromId}/${orderData.toId}`,\n    orderData,\n  )\n  return res.data\n}\n\nexport const deleteSheet = async (sheetId: number) => {\n  let res = await axiosInstance.delete(`${sheetId}`)\n  return res.data\n}\n\nexport interface sheetOrderInterface {\n  fromId: number\n  toId: number\n}\n","import styled from '@emotion/styled'\nimport React, { useMemo, useRef } from 'react'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport {\n  localeBigInt,\n  parseToNumber,\n  removeComma,\n  setFixed,\n} from '../../util/util'\n\nconst stringToBig = (str: string) => BigInt(removeComma(str))\n\nexport default function SheetSummary({\n  sheetData,\n  setSheetData,\n}: {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n}) {\n  const income = useRef(0)\n  const sum = useRef(0)\n  const { summary, summaryKeys } = useMemo(() => {\n    if (!sheetData?.table) return { summary: {}, summaryKeys: [] }\n    const obj = {}\n    income.current = 0\n    sum.current = 0\n    sheetData?.table?.forEach((row, i) => {\n      // 월급, 수입 저장\n      sum.current += parseToNumber(row[3])\n      if (row[0].includes('월급') || row[0].includes('수입')) {\n        income.current += parseToNumber(row[3])\n      }\n      //row[0]가 공백이 아니면 obj에 값 합산해서 저장\n      if (row[0].trim() !== '') {\n        if (obj[row[0]] === undefined) {\n          obj[row[0]] = { sum: '0', order: '' }\n        }\n        try {\n          const before = stringToBig(obj[row[0]].sum || '0')\n          const after = stringToBig(row[3] || '0')\n          obj[row[0]].sum = String(before + after)\n        } catch (e) {}\n      }\n    })\n    // 숫자 추출해서 오름차순 정렬\n    const keys = Object.keys(obj).sort((a, b) => {\n      const numA = Number(a.slice(0, a.indexOf('.')))\n      const numB = Number(b.slice(0, b.indexOf('.')))\n      if (!isNaN(numA) && !isNaN(numB)) {\n        if (numA > numB) return 1\n        else return -1\n      } else {\n        if (a > b) return 1\n        else return -1\n      }\n    })\n    keys.forEach((item, i) => (obj[item].order = i))\n    return { summary: obj, summaryKeys: keys }\n  }, [sheetData?.table])\n\n  console.log(income.current)\n  console.log(sum.current)\n  return (\n    <SheetSummaryWrapper>\n      {summaryKeys.length > 0 ? (\n        <>\n          <SummaryTitle>요약</SummaryTitle>\n          <SummaryDiv>\n            {React.Children.toArray(\n              summaryKeys.map((item, i) => (\n                <SummaryRow style={i % 2 === 0 ? { background: '#cec' } : {}}>\n                  <TypeName>{item}</TypeName>\n                  <Sum>\n                    {`${localeBigInt(summary[item]?.sum)} 원`}\n                    <Percent>{`${Math.abs(\n                      setFixed(\n                        (parseToNumber(summary[item]?.sum) * 100) /\n                          (income.current !== 0 ? income.current : sum.current),\n                        2,\n                      ),\n                    )}%`}</Percent>\n                  </Sum>\n                </SummaryRow>\n              )),\n            )}\n          </SummaryDiv>\n        </>\n      ) : null}\n    </SheetSummaryWrapper>\n  )\n}\n\nconst SheetSummaryWrapper = styled.div`\n  padding: 20px 0;\n`\nconst SummaryTitle = styled.div`\n  font-weight: bold;\n`\nconst SummaryDiv = styled.div`\n  padding-top: 10px;\n`\nconst SummaryRow = styled.div`\n  padding: 2px 4px;\n  width: 300px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst TypeName = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: space-between;\n  width: 80px;\n  padding-right: 10px;\n  border-right: 1px solid #222;\n`\nconst Sum = styled.div`\n  display: flex;\n  padding-left: 10px;\n  text-align: right;\n  overflow-wrap: anywhere;\n`\nconst Percent = styled.div`\n  width: 60px;\n  margin-left: 4px;\n  border-left: 1px solid #222;\n`\n","import React, { ChangeEvent, useEffect, useMemo, useState } from 'react'\nimport { Colors } from '../../util/Colors'\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\nimport produce from 'immer'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport styled from '@emotion/styled'\nimport { animationDuration } from '../../constant/constant'\nimport {\n  changeInputWidth,\n  isBigInt,\n  localeBigInt,\n  parseToBigInt,\n} from '../../util/util'\nimport { getType } from '../../api/type'\nimport OpenColor from 'open-color'\n\ninterface SheetTableInterface {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n  addRow?: (row: number) => void\n  removeRow?: (row: number) => void\n  changeRef?: React.MutableRefObject<boolean>\n  readOnly?: boolean\n}\n\nexport default function SheetTable({\n  sheetData,\n  setSheetData,\n  addRow,\n  removeRow,\n  changeRef,\n  readOnly = false,\n}: SheetTableInterface) {\n  let sum = BigInt(0)\n  const defaultTypes = useMemo(\n    () => [\n      '',\n      '1.생활비',\n      '2.배달외식',\n      '3.기타',\n      '4.관리비',\n      '5.저금',\n      '6.보험료',\n      '7.여행',\n      '8.경조사',\n      '9.병원',\n      '10.비상금',\n      '11.수입',\n    ],\n    [],\n  )\n  const [types, setTypes] = useState(defaultTypes)\n\n  useEffect(() => {\n    getType().then((res) => {\n      setTypes(res.types || defaultTypes)\n    })\n  }, [defaultTypes])\n\n  // 이벤트와 인덱스를 받아서 sheetData에 저장\n  const handleInputChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    i: number,\n    j: number,\n    select = false,\n  ) => {\n    if (changeRef) changeRef.current = true\n    if (e.target) {\n      // input size 변경\n      changeInputWidth(e.target, select)\n\n      // sheetData 업데이트\n      const newSheetData = produce((draft) => {\n        if (draft && draft.table && draft.table[i]) {\n          draft.table[i][j] = e.target.value\n          return draft\n        }\n      }, sheetData)\n      setSheetData(newSheetData)\n    }\n  }\n\n  return (\n    <TableWrapper>\n      <table>\n        <tbody>\n          <tr>\n            {readOnly ? (\n              <th></th>\n            ) : (\n              <th onClick={() => addRow && addRow(0)}>\n                <AddIcon fontSize='small' />\n              </th>\n            )}\n            <th>번호</th>\n            <th>유형</th>\n            <th>날짜</th>\n            <th>제목</th>\n            <th>가격</th>\n            <th>합계</th>\n            <th></th>\n          </tr>\n          {React.Children.toArray(\n            sheetData?.table?.map((row, i) => (\n              <tr id={`row_${i + 1}`}>\n                {readOnly ? (\n                  <td></td>\n                ) : (\n                  <td\n                    onClick={() => {\n                      addRow && addRow(i + 1)\n                    }}\n                  >\n                    <AddIcon fontSize='small' />\n                  </td>\n                )}\n                <td>{i + 1}</td>\n                {React.Children.toArray(\n                  row.map((col, j) => {\n                    // 합계에 가격 더하기\n                    if (j === 0) {\n                      return (\n                        <td>\n                          {readOnly ? (\n                            <Background value={col} height='20px'>\n                              {col}\n                            </Background>\n                          ) : (\n                            <CommonSelect\n                              value={col}\n                              onChange={(e) => handleInputChange(e, i, j, true)}\n                              height='27px'\n                            >\n                              {React.Children.toArray(\n                                types.map((type) => <option>{type}</option>),\n                              )}\n                            </CommonSelect>\n                          )}\n                        </td>\n                      )\n                    }\n                    if (j === 3) {\n                      sum += parseToBigInt(col)\n                    }\n                    return (\n                      <td>\n                        {readOnly ? (\n                          col.toString()\n                        ) : (\n                          <CommonInput\n                            numCheck={j === 3}\n                            value={\n                              j === 3 && isBigInt(col) && col !== ''\n                                ? localeBigInt(col)\n                                : col.toString()\n                            }\n                            height='28px'\n                            onChange={(e) => handleInputChange(e, i, j)}\n                          />\n                        )}\n                      </td>\n                    )\n                  }),\n                )}\n                <td>{localeBigInt(sum)}</td>\n                {readOnly ? (\n                  <td></td>\n                ) : (\n                  <td onClick={() => removeRow && removeRow(i + 1)}>\n                    <RemoveIcon fontSize='small' />\n                  </td>\n                )}\n              </tr>\n            )),\n          )}\n        </tbody>\n      </table>\n    </TableWrapper>\n  )\n}\n\nconst TableWrapper = styled.div`\n  min-width: 100%;\n  max-width: 200%;\n  overflow: auto;\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    border: 1px solid ${Colors.greenLine};\n  }\n  th {\n    background: ${Colors.greenLine};\n  }\n  th,\n  td {\n    border: 1px solid ${Colors.greenLine};\n    white-space: pre;\n    text-align: left;\n    padding: 2px;\n    min-width: 10px;\n  }\n  .blink {\n    @keyframes blink {\n      0% {\n        background: ${Colors.greenLine};\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blink ${animationDuration}ms;\n  }\n  .blinkRed {\n    @keyframes blinkRed {\n      0% {\n        background: red;\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blinkRed ${animationDuration}ms;\n  }\n  th:nth-of-type(5),\n  th:nth-of-type(6),\n  th:nth-of-type(7) {\n    min-width: 60px;\n  }\n  td:nth-of-type(6),\n  td:nth-of-type(7),\n  td:nth-of-type(6) input,\n  td:nth-of-type(7) input {\n    text-align: right;\n  }\n  td:nth-of-type(3),\n  td:nth-of-type(4),\n  td:nth-of-type(5),\n  td:nth-of-type(6) {\n    padding: 0;\n  }\n`\nconst AddIcon = styled(AddCircleOutlineIcon)`\n  color: #7c7;\n`\nconst RemoveIcon = styled(RemoveCircleOutlineIcon)`\n  color: red;\n`\nexport const CommonInput = styled.input<{\n  height?: string\n  value?: string | number | BigInt\n  numCheck?: boolean\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    background: ${OpenColor.green[0]};\n  }\n  ${({ numCheck, value }) => {\n    return numCheck && !isBigInt(value) ? 'background: #fcc;' : ''\n  }}\n`\nconst background = (value: string) => {\n  if (value.includes('생활비')) {\n    return OpenColor.pink[2]\n  } else if (value.includes('배달외식')) {\n    return OpenColor.red[2]\n  } else if (value.includes('기타')) {\n    return OpenColor.yellow[2]\n  } else if (value.includes('관리비')) {\n    return OpenColor.lime[2]\n  } else if (value.includes('저금')) {\n    return OpenColor.blue[4]\n  } else if (value.includes('보험료')) {\n    return OpenColor.blue[2]\n  } else if (value.includes('여행')) {\n    return OpenColor.indigo[2]\n  } else if (value.includes('경조사')) {\n    return OpenColor.indigo[4]\n  } else if (value.includes('병원')) {\n    return OpenColor.violet[2]\n  } else if (value.includes('비상금')) {\n    return OpenColor.violet[4]\n  } else if (value.includes('수입')) {\n    return OpenColor.grape[2]\n  } else if (value.includes('용돈')) {\n    return OpenColor.lime[4]\n  } else if (value.includes('카드')) {\n    return OpenColor.yellow[4]\n  } else if (value.includes('월급')) {\n    return OpenColor.grape[4]\n  }\n}\n\nconst CommonSelect = styled.select<{\n  height?: string\n  value: string\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: transparent;\n  color: #222;\n  font: inherit;\n  background: ${({ value }) => background(value)};\n`\n\nconst Background = styled.div<{\n  height?: string\n  value: string\n}>`\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  background: ${({ value }) => background(value)};\n`\n","export const animationDuration = 300\n","import styled from '@emotion/styled'\nimport RefreshIcon from '@mui/icons-material/Refresh'\n\nexport default function RefreshButton({\n  onClick,\n  refreshing,\n}: {\n  onClick: () => void\n  refreshing: boolean\n}) {\n  return (\n    <RefreshButtonWrapper onClick={onClick} disabled={refreshing}>\n      <RefreshIcon />\n    </RefreshButtonWrapper>\n  )\n}\n\nconst RefreshButtonWrapper = styled.button<{ disabled: boolean }>`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  @media (min-width: 500px) {\n    right: calc(50% - 230px);\n  }\n\n  padding: 5px;\n  width: 40px;\n  height: 40px;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #eee;\n  border-radius: 100%;\n\n  ${({ disabled }) => disabled && `animation: 500ms rotation infinite linear;`}\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  svg {\n    color: #aaa;\n    width: 100%;\n    height: 100%;\n  }\n`\n","import styled from '@emotion/styled'\nimport React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport Header from '../component/Header/Header'\nimport produce from 'immer'\n\nimport { getSheet, patchSheet } from '../api/sheet'\nimport RefreshButton from '../component/Button/RefreshButton'\nimport SheetTable from '../component/SheetPage/SheetTable'\nimport { animationDuration } from '../constant/constant'\nimport { Colors } from '../util/Colors'\nimport { addSnackBar, changeInputWidth } from '../util/util'\nimport LoadingDim from '../component/LoadingDim/LoadingDim'\nimport SheetSummary from '../component/SheetPage/SheetSummary'\n\nexport interface SheetDataInterface {\n  sheetId: number\n  name: string\n  order: number\n  table?: string[][]\n  types?: string[]\n}\n\n// 첫 데이터가 펫치됐을때 한번만 setInputWidth() 실행하기 위함\n\nexport default function SheetPage() {\n  const params = useParams()\n  const navigate = useNavigate()\n  const [sheetData, setSheetData] = useState<SheetDataInterface>()\n  const [loading, setLoading] = useState(false)\n  const [addedRow, setAddedRow] = useState<number>()\n  const [removedRow, setRemovedRow] = useState<number>()\n  const [beforeSetWidth, setBeforeSetWidth] = useState(true)\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 자동저장 스로틀\n  const changeRef = useRef(false) // 최초 변경사항 감지\n\n  const getSheetAndSet = useCallback(() => {\n    if (params.sheetId) {\n      setLoading(true)\n      getSheet(Number(params.sheetId)).then((res) => {\n        setLoading(false)\n        if (res) setSheetData(res)\n      })\n    }\n  }, [params.sheetId])\n\n  const handleChangeTitle = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      changeRef.current = true\n      // sheetData 업데이트\n      if (sheetData) {\n        const newSheetData = produce((draft) => {\n          if (draft) {\n            // size 변경\n            changeInputWidth(e.target)\n\n            draft.name = e.target.value\n            return draft\n          }\n        }, sheetData)\n        setSheetData(newSheetData)\n      }\n    },\n    [sheetData],\n  )\n  // 처음 한번만 전체 input width 설정하기\n  const changeInputWidthAll = useCallback(() => {\n    const inputs = document.querySelectorAll<HTMLInputElement>(\n      'input:not(.fakeInput)',\n    )\n    if (inputs) {\n      inputs.forEach((input) => {\n        changeInputWidth(input)\n      })\n      setBeforeSetWidth(false)\n    }\n    const selects = document.querySelectorAll<HTMLSelectElement>(\n      'select:not(.fakeSelect)',\n    )\n    if (selects) {\n      selects.forEach((select) => {\n        changeInputWidth(select, true)\n      })\n      setBeforeSetWidth(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    getSheetAndSet()\n  }, [getSheetAndSet])\n\n  // sheetData 바뀌고 beforeSetWidth가 true이면 input width 바꿔주기\n  useEffect(() => {\n    if (beforeSetWidth && sheetData) {\n      changeInputWidthAll()\n    }\n  }, [beforeSetWidth, changeInputWidthAll, sheetData])\n\n  // addRow 액션\n  useEffect(() => {\n    if (addedRow !== undefined) {\n      const tr = document.querySelector(`#row_${addedRow + 1}`)\n      if (tr) {\n        tr.classList.add('blink')\n        setAddedRow(undefined)\n        setTimeout(() => {\n          tr.classList.remove('blink')\n        }, animationDuration)\n      }\n    }\n  }, [addedRow])\n\n  // removeRow 액션\n  useEffect(() => {\n    if (sheetData && removedRow !== undefined) {\n      const tr = document.querySelector(`#row_${removedRow}`)\n      if (tr) {\n        tr.classList.add('blinkRed')\n        setTimeout(() => {\n          tr.classList.remove('blinkRed')\n          const nextState = produce(sheetData, (draft) => {\n            draft?.table?.splice(removedRow - 1, 1)\n          })\n          setSheetData(nextState)\n          setRemovedRow(undefined)\n        }, animationDuration)\n      }\n    }\n  }, [removedRow, sheetData])\n\n  const addRow = useCallback(\n    (row: number) => {\n      changeRef.current = true\n      const nextState = produce(sheetData, (draft) => {\n        draft?.table?.splice(row, 0, ['', '', '', ''])\n      })\n      setSheetData(nextState)\n      setAddedRow(row)\n    },\n    [sheetData],\n  )\n\n  const removeRow = useCallback((row: number) => {\n    changeRef.current = true\n    setRemovedRow(row)\n  }, [])\n\n  const saveSheet = useCallback(() => {\n    if (params.sheetId && sheetData) {\n      // setLoading(true)\n      patchSheet(Number(params.sheetId), sheetData).then((res) => {\n        // setLoading(false)\n        addSnackBar('자동 저장')\n      })\n    }\n  }, [params.sheetId, sheetData])\n\n  // 데이터 변경되면 2초 스로틀 방식으로 데이터 자동 저장\n  useEffect(() => {\n    if (changeRef.current === true) {\n      if (timeoutRef.current !== null) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        saveSheet()\n      }, 2000)\n    }\n  }, [saveSheet, sheetData])\n\n  return (\n    <>\n      <Header\n        title={\n          sheetData?.name !== undefined ? (\n            <HeaderInput value={sheetData?.name} onChange={handleChangeTitle} />\n          ) : null\n        }\n        backButton\n        backFunction={() => navigate('/', { replace: true })}\n      />\n      <SheetTable\n        sheetData={sheetData}\n        setSheetData={setSheetData}\n        addRow={addRow}\n        removeRow={removeRow}\n        changeRef={changeRef}\n      />\n      <SheetSummary sheetData={sheetData} setSheetData={setSheetData} />\n      <RefreshButton\n        refreshing={loading}\n        onClick={() => {\n          getSheetAndSet()\n          setBeforeSetWidth(true)\n          addSnackBar('새로고침 완료')\n        }}\n      />\n      <LoadingDim loading={loading} />\n    </>\n  )\n}\n\nconst HeaderInput = styled.input`\n  width: 100%;\n  min-width: 50px;\n  height: 24px;\n  border: 0;\n  padding: 0 2px;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    border-bottom: 1px solid ${Colors.greenLine};\n  }\n`\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["axiosInstance","Axios","baseURL","process","withCredentials","getSheets","get","res","data","getSheet","sheetId","postSheets","post","patchSheet","sheetData","patch","patchOrder","orderData","fromId","toId","deleteSheet","delete","stringToBig","str","BigInt","removeComma","SheetSummary","income","setSheetData","useRef","sum","useMemo","table","summary","summaryKeys","obj","current","forEach","row","i","parseToNumber","includes","trim","undefined","order","before","after","String","e","keys","Object","sort","a","b","numA","Number","slice","indexOf","numB","isNaN","item","console","log","SheetSummaryWrapper","length","SummaryTitle","SummaryDiv","React","map","SummaryRow","style","background","TypeName","Sum","localeBigInt","Percent","Math","abs","setFixed","styled","SheetTable","addRow","removeRow","changeRef","readOnly","defaultTypes","useState","types","setTypes","useEffect","getType","then","handleInputChange","j","select","target","changeInputWidth","newSheetData","produce","draft","value","TableWrapper","onClick","AddIcon","fontSize","id","col","Background","height","CommonSelect","onChange","type","parseToBigInt","toString","CommonInput","numCheck","isBigInt","RemoveIcon","Colors","animationDuration","AddCircleOutlineIcon","RemoveCircleOutlineIcon","OpenColor","RefreshButton","refreshing","RefreshButtonWrapper","disabled","Refresh","SheetPage","params","useParams","navigate","useNavigate","loading","setLoading","addedRow","setAddedRow","removedRow","setRemovedRow","beforeSetWidth","setBeforeSetWidth","timeoutRef","getSheetAndSet","useCallback","handleChangeTitle","name","changeInputWidthAll","inputs","document","querySelectorAll","input","selects","tr","querySelector","classList","add","setTimeout","remove","nextState","splice","saveSheet","addSnackBar","clearTimeout","Header","title","HeaderInput","backButton","backFunction","replace","LoadingDim","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}