{"version":3,"file":"static/js/495.dc20e467.chunk.js","mappings":"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","sources":["component/Button/RefreshButton.tsx","page/SheetPage.tsx","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["import styled from '@emotion/styled'\r\nimport RefreshIcon from '@mui/icons-material/Refresh'\r\n\r\nexport default function RefreshButton({\r\n  onClick,\r\n  refreshing,\r\n}: {\r\n  onClick: () => void\r\n  refreshing: boolean\r\n}) {\r\n  return (\r\n    <RefreshButtonWrapper onClick={onClick} disabled={refreshing}>\r\n      <RefreshIcon />\r\n    </RefreshButtonWrapper>\r\n  )\r\n}\r\n\r\nconst RefreshButtonWrapper = styled.button<{ disabled: boolean }>`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  @media (min-width: 1000px) {\r\n    right: calc(50% - (1000px / 2) + 20px);\r\n  }\r\n\r\n  padding: 5px;\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  overflow: hidden;\r\n  background: white;\r\n  border: 2px solid #eee;\r\n  border-radius: 100%;\r\n\r\n  ${({ disabled }) => disabled && `animation: 500ms rotation infinite linear;`}\r\n  @keyframes rotation {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  svg {\r\n    color: #aaa;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\n","import styled from '@emotion/styled'\r\nimport React, {\r\n  ChangeEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Header from '../component/Header/Header'\r\nimport produce from 'immer'\r\n\r\nimport { getSheet, patchSheet } from '../api/sheet'\r\nimport RefreshButton from '../component/Button/RefreshButton'\r\nimport SheetTable from '../component/SheetPage/SheetTable'\r\nimport { animationDuration } from '../constant/constant'\r\nimport { Colors } from '../util/Colors'\r\nimport { addSnackBar, changeInputWidth } from '../util/util'\r\nimport LoadingDim from '../component/LoadingDim/LoadingDim'\r\nimport SheetSummary from '../component/SheetPage/SheetSummary'\r\nimport { MOBILE_PADDING } from '../App'\r\n\r\nexport interface SheetDataInterface {\r\n  sheetId: number\r\n  name: string\r\n  order: number\r\n  table?: string[][]\r\n  types?: string[]\r\n}\r\n\r\n// 첫 데이터가 펫치됐을때 한번만 setInputWidth() 실행하기 위함\r\n\r\nexport default function SheetPage() {\r\n  const params = useParams()\r\n  const navigate = useNavigate()\r\n  const [sheetData, setSheetData] = useState<SheetDataInterface>()\r\n  const [loading, setLoading] = useState(false)\r\n  const [addedRow, setAddedRow] = useState<number>()\r\n  const [removedRow, setRemovedRow] = useState<number>()\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 자동저장 스로틀\r\n  const changeRef = useRef(false) // 최초 변경사항 감지\r\n\r\n  const getSheetAndSet = useCallback(() => {\r\n    if (params.sheetId) {\r\n      setLoading(true)\r\n      getSheet(Number(params.sheetId)).then((res) => {\r\n        setLoading(false)\r\n        if (res) setSheetData(res)\r\n      })\r\n    }\r\n  }, [params.sheetId])\r\n\r\n  const handleChangeTitle = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      changeRef.current = true\r\n      // sheetData 업데이트\r\n      if (sheetData) {\r\n        const newSheetData = produce((draft) => {\r\n          if (draft) {\r\n            // size 변경\r\n            changeInputWidth(e.target)\r\n\r\n            draft.name = e.target.value\r\n            return draft\r\n          }\r\n        }, sheetData)\r\n        setSheetData(newSheetData)\r\n      }\r\n    },\r\n    [sheetData],\r\n  )\r\n\r\n  useEffect(() => {\r\n    getSheetAndSet()\r\n  }, [getSheetAndSet])\r\n\r\n  // addRow 액션\r\n  useEffect(() => {\r\n    if (addedRow !== undefined) {\r\n      const tr = document.querySelector(`#row_${addedRow + 1}`)\r\n      if (tr) {\r\n        tr.classList.add('blink')\r\n        setAddedRow(undefined)\r\n        setTimeout(() => {\r\n          tr.classList.remove('blink')\r\n        }, animationDuration)\r\n      }\r\n    }\r\n  }, [addedRow])\r\n\r\n  // removeRow 액션\r\n  useEffect(() => {\r\n    if (sheetData && removedRow !== undefined) {\r\n      const tr = document.querySelector(`#row_${removedRow}`)\r\n      if (tr) {\r\n        tr.classList.add('blinkRed')\r\n        setTimeout(() => {\r\n          tr.classList.remove('blinkRed')\r\n          const nextState = produce(sheetData, (draft) => {\r\n            draft?.table?.splice(removedRow - 1, 1)\r\n          })\r\n          setSheetData(nextState)\r\n          setRemovedRow(undefined)\r\n        }, animationDuration)\r\n      }\r\n    }\r\n  }, [removedRow, sheetData])\r\n\r\n  const addRow = useCallback(\r\n    (row: number) => {\r\n      changeRef.current = true\r\n      const nextState = produce(sheetData, (draft) => {\r\n        draft?.table?.splice(row, 0, ['', '', '', ''])\r\n      })\r\n      setSheetData(nextState)\r\n      setAddedRow(row)\r\n    },\r\n    [sheetData],\r\n  )\r\n\r\n  const removeRow = useCallback((row: number) => {\r\n    changeRef.current = true\r\n    setRemovedRow(row)\r\n  }, [])\r\n\r\n  const saveSheet = useCallback(() => {\r\n    if (params.sheetId && sheetData) {\r\n      // setLoading(true)\r\n      patchSheet(Number(params.sheetId), sheetData).then((res) => {\r\n        // setLoading(false)\r\n        addSnackBar('자동 저장')\r\n      })\r\n    }\r\n  }, [params.sheetId, sheetData])\r\n\r\n  // 데이터 변경되면 2초 스로틀 방식으로 데이터 자동 저장\r\n  useEffect(() => {\r\n    if (changeRef.current === true) {\r\n      if (timeoutRef.current !== null) {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n      timeoutRef.current = setTimeout(() => {\r\n        timeoutRef.current = null\r\n        saveSheet()\r\n      }, 2000)\r\n    }\r\n  }, [saveSheet, sheetData])\r\n\r\n  return (\r\n    <StyledSheetPage>\r\n      <Header\r\n        title={\r\n          sheetData?.name !== undefined ? (\r\n            <HeaderInput value={sheetData?.name} onChange={handleChangeTitle} />\r\n          ) : null\r\n        }\r\n        backButton\r\n        backFunction={() => navigate('/', { replace: true })}\r\n      />\r\n      <SheetTable\r\n        sheetData={sheetData}\r\n        setSheetData={setSheetData}\r\n        addRow={addRow}\r\n        removeRow={removeRow}\r\n        changeRef={changeRef}\r\n      />\r\n      <SheetSummary sheetData={sheetData} setSheetData={setSheetData} />\r\n      <RefreshButton\r\n        refreshing={loading}\r\n        onClick={() => {\r\n          getSheetAndSet()\r\n          changeRef.current = false\r\n          addSnackBar('새로고침 완료')\r\n        }}\r\n      />\r\n      <LoadingDim loading={loading} />\r\n    </StyledSheetPage>\r\n  )\r\n}\r\nconst StyledSheetPage = styled.div`\r\n  ${MOBILE_PADDING}\r\n`\r\nconst HeaderInput = styled.input`\r\n  width: 100%;\r\n  min-width: 50px;\r\n  height: 24px;\r\n  border: 0;\r\n  padding: 0 2px;\r\n  outline: none;\r\n  background: none;\r\n  font: inherit;\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    border-bottom: 1px solid ${Colors.greenLine};\r\n  }\r\n`\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["RefreshButton","onClick","refreshing","RefreshButtonWrapper","disabled","Refresh","styled","SheetPage","params","useParams","navigate","useNavigate","useState","sheetData","setSheetData","loading","setLoading","addedRow","setAddedRow","removedRow","setRemovedRow","timeoutRef","useRef","changeRef","getSheetAndSet","useCallback","sheetId","getSheet","Number","then","res","handleChangeTitle","e","current","newSheetData","produce","draft","changeInputWidth","target","name","value","useEffect","undefined","tr","document","querySelector","classList","add","setTimeout","remove","animationDuration","nextState","table","splice","addRow","row","removeRow","saveSheet","patchSheet","addSnackBar","clearTimeout","StyledSheetPage","Header","title","HeaderInput","onChange","backButton","backFunction","replace","SheetTable","SheetSummary","LoadingDim","MOBILE_PADDING","Colors","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}