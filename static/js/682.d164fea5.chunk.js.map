{"version":3,"file":"static/js/682.d164fea5.chunk.js","mappings":"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","sources":["api/sheet.ts","component/Button/RefreshButton.tsx","constant/constant.ts","component/SheetPage/SheetTable.tsx","component/SheetPage/SheetSummary.tsx","page/SheetPage.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["import Axios from 'axios'\nimport { SheetDataInterface } from '../page/SheetPage'\n\nconst axiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_API_URL + 'accountBook/sheet/',\n  withCredentials: true,\n})\n\nexport const getSheets = async () => {\n  let res = await axiosInstance.get<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const getSheet = async (sheetId: number) => {\n  let res = await axiosInstance.get<SheetDataInterface>(`${sheetId}`)\n  return res.data\n}\n\nexport const postSheets = async () => {\n  let res = await axiosInstance.post<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const patchSheet = async (\n  sheetId: number,\n  sheetData: SheetDataInterface,\n) => {\n  let res = await axiosInstance.patch<SheetDataInterface>(\n    `${sheetId}`,\n    sheetData,\n  )\n  return res.data\n}\n\n// sheet 순서 변경\nexport const patchOrder = async (orderData: sheetOrderInterface) => {\n  let res = await axiosInstance.patch(\n    `${orderData.fromId}/${orderData.toId}`,\n    orderData,\n  )\n  return res.data\n}\n\nexport const deleteSheet = async (sheetId: number) => {\n  let res = await axiosInstance.delete(`${sheetId}`)\n  return res.data\n}\n\nexport interface sheetOrderInterface {\n  fromId: number\n  toId: number\n}\n","import styled from '@emotion/styled'\nimport RefreshIcon from '@mui/icons-material/Refresh'\n\nexport default function RefreshButton({\n  onClick,\n  refreshing,\n}: {\n  onClick: () => void\n  refreshing: boolean\n}) {\n  return (\n    <RefreshButtonWrapper onClick={onClick} disabled={refreshing}>\n      <RefreshIcon />\n    </RefreshButtonWrapper>\n  )\n}\n\nconst RefreshButtonWrapper = styled.button<{ disabled: boolean }>`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  @media (min-width: 500px) {\n    right: calc(50% - 230px);\n  }\n\n  padding: 5px;\n  width: 40px;\n  height: 40px;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #eee;\n  border-radius: 100%;\n\n  ${({ disabled }) => disabled && `animation: 500ms rotation infinite linear;`}\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  svg {\n    color: #aaa;\n    width: 100%;\n    height: 100%;\n  }\n`\n","export const animationDuration = 300\n","import React, { ChangeEvent, useEffect, useMemo, useState } from 'react'\nimport { Colors } from '../../util/Colors'\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\nimport produce from 'immer'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport styled from '@emotion/styled'\nimport { animationDuration } from '../../constant/constant'\nimport {\n  changeInputWidth,\n  isBigInt,\n  localeBigInt,\n  parseToBigInt,\n} from '../../util/util'\nimport { getType } from '../../api/type'\nimport OpenColor from 'open-color'\n\ninterface SheetTableInterface {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n  addRow: (row: number) => void\n  removeRow: (row: number) => void\n  changeRef: React.MutableRefObject<boolean>\n}\n\nexport default function SheetTable({\n  sheetData,\n  setSheetData,\n  addRow,\n  removeRow,\n  changeRef,\n}: SheetTableInterface) {\n  let sum = BigInt(0)\n  const defaultTypes = useMemo(\n    () => [\n      '',\n      '1.생활비',\n      '2.배달외식',\n      '3.기타',\n      '4.관리비',\n      '5.저금',\n      '6.보험료',\n      '7.여행',\n      '8.경조사',\n      '9.병원',\n      '10.비상금',\n      '11.수입',\n    ],\n    [],\n  )\n  const [types, setTypes] = useState(defaultTypes)\n\n  useEffect(() => {\n    getType().then((res) => {\n      setTypes(res.types || defaultTypes)\n    })\n  }, [defaultTypes])\n\n  // 이벤트와 인덱스를 받아서 sheetData에 저장\n  const handleInputChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    i: number,\n    j: number,\n    select = false,\n  ) => {\n    changeRef.current = true\n    if (e.target) {\n      // input size 변경\n      changeInputWidth(e.target, select)\n\n      // sheetData 업데이트\n      const newSheetData = produce((draft) => {\n        if (draft && draft.table && draft.table[i]) {\n          draft.table[i][j] = e.target.value\n          return draft\n        }\n      }, sheetData)\n      setSheetData(newSheetData)\n    }\n  }\n\n  return (\n    <TableWrapper>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>번호</th>\n            <th>유형</th>\n            <th>날짜</th>\n            <th>제목</th>\n            <th>가격</th>\n            <th>합계</th>\n            <th onClick={() => addRow(0)}>\n              <AddIcon fontSize='small' />\n            </th>\n          </tr>\n          {React.Children.toArray(\n            sheetData?.table?.map((row, i) => (\n              <tr id={`row_${i + 1}`}>\n                <td\n                  onClick={() => {\n                    removeRow(i + 1)\n                  }}\n                >\n                  <RemoveIcon fontSize='small' />\n                </td>\n                <td>{i + 1}</td>\n                {React.Children.toArray(\n                  row.map((col, j) => {\n                    // 합계에 가격 더하기\n                    if (j === 0) {\n                      return (\n                        <td>\n                          <CommonSelect\n                            value={col}\n                            onChange={(e) => handleInputChange(e, i, j, true)}\n                            height='27px'\n                          >\n                            {React.Children.toArray(\n                              types.map((type) => <option>{type}</option>),\n                            )}\n                          </CommonSelect>\n                        </td>\n                      )\n                    }\n                    if (j === 3) {\n                      sum += parseToBigInt(col)\n                    }\n                    return (\n                      <td>\n                        <CommonInput\n                          numCheck={j === 3}\n                          value={\n                            j === 3 && isBigInt(col) && col !== ''\n                              ? localeBigInt(col)\n                              : col.toString()\n                          }\n                          height='28px'\n                          onChange={(e) => handleInputChange(e, i, j)}\n                        />\n                      </td>\n                    )\n                  }),\n                )}\n                <td>{localeBigInt(sum)}</td>\n                <td onClick={() => addRow(i + 1)}>\n                  <AddIcon fontSize='small' />\n                </td>\n              </tr>\n            )),\n          )}\n        </tbody>\n      </table>\n    </TableWrapper>\n  )\n}\n\nconst TableWrapper = styled.div`\n  min-width: 100%;\n  max-width: 200%;\n  overflow: auto;\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    border: 1px solid ${Colors.greenLine};\n  }\n  th {\n    background: ${Colors.greenLine};\n  }\n  th,\n  td {\n    border: 1px solid ${Colors.greenLine};\n    white-space: pre;\n    text-align: left;\n    padding: 2px;\n    min-width: 10px;\n  }\n  .blink {\n    @keyframes blink {\n      0% {\n        background: ${Colors.greenLine};\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blink ${animationDuration}ms;\n  }\n  .blinkRed {\n    @keyframes blinkRed {\n      0% {\n        background: red;\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blinkRed ${animationDuration}ms;\n  }\n  th:nth-of-type(5),\n  th:nth-of-type(6),\n  th:nth-of-type(7) {\n    min-width: 60px;\n  }\n  td:nth-of-type(6) input,\n  td:nth-of-type(7) {\n    text-align: right;\n  }\n  td:nth-of-type(3),\n  td:nth-of-type(4),\n  td:nth-of-type(5),\n  td:nth-of-type(6) {\n    padding: 0;\n  }\n`\nconst AddIcon = styled(AddCircleOutlineIcon)`\n  color: #7c7;\n`\nconst RemoveIcon = styled(RemoveCircleOutlineIcon)`\n  color: red;\n`\nexport const CommonInput = styled.input<{\n  height?: string\n  value?: string | number | BigInt\n  numCheck?: boolean\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    background: ${OpenColor.green[0]};\n  }\n  ${({ numCheck, value }) => {\n    return numCheck && !isBigInt(value) ? 'background: #fcc;' : ''\n  }}\n`\n\nconst CommonSelect = styled.select<{\n  height?: string\n  value: string\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: transparent;\n  color: #222;\n  font: inherit;\n  background: ${({ value }) => {\n    if (value.includes('생활비')) {\n      return OpenColor.pink[2]\n    } else if (value.includes('배달외식')) {\n      return OpenColor.red[2]\n    } else if (value.includes('기타')) {\n      return OpenColor.yellow[2]\n    } else if (value.includes('관리비')) {\n      return OpenColor.lime[2]\n    } else if (value.includes('저금')) {\n      return OpenColor.blue[4]\n    } else if (value.includes('보험료')) {\n      return OpenColor.blue[2]\n    } else if (value.includes('여행')) {\n      return OpenColor.indigo[2]\n    } else if (value.includes('경조사')) {\n      return OpenColor.indigo[4]\n    } else if (value.includes('병원')) {\n      return OpenColor.violet[2]\n    } else if (value.includes('비상금')) {\n      return OpenColor.violet[4]\n    } else if (value.includes('수입')) {\n      return OpenColor.grape[2]\n    }\n  }};\n`\n","import styled from '@emotion/styled'\nimport React, { useMemo } from 'react'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport { localeBigInt, removeComma } from '../../util/util'\n\nconst stringToBig = (str: string) => BigInt(removeComma(str))\n\nexport default function SheetSummary({\n  sheetData,\n  setSheetData,\n}: {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n}) {\n  const { summary, summaryKeys } = useMemo(() => {\n    if (!sheetData?.table) return { summary: {}, summaryKeys: [] }\n    const obj = {}\n    sheetData?.table?.forEach((row, i) => {\n      //row[0]가 공백이 아니면 obj에 값 합산해서 저장\n      if (row[0].trim() !== '') {\n        if (obj[row[0]] === undefined) {\n          obj[row[0]] = { sum: '0', order: '' }\n        }\n        try {\n          const before = stringToBig(obj[row[0]].sum || '0')\n          const after = stringToBig(row[3] || '0')\n          obj[row[0]].sum = String(before + after)\n        } catch (e) {}\n      }\n    })\n    // 숫자 추출해서 오름차순 정렬\n    const keys = Object.keys(obj).sort((a, b) => {\n      const numA = Number(a.slice(0, a.indexOf('.')))\n      const numB = Number(b.slice(0, b.indexOf('.')))\n      if (!isNaN(numA) && !isNaN(numB)) {\n        if (numA > numB) return 1\n        else return -1\n      } else {\n        if (a > b) return 1\n        else return -1\n      }\n    })\n    keys.forEach((item, i) => (obj[item].order = i))\n    return { summary: obj, summaryKeys: keys }\n  }, [sheetData?.table])\n\n  return (\n    <SheetSummaryWrapper>\n      {summaryKeys.length > 0 ? (\n        <>\n          <SummaryTitle>요약</SummaryTitle>\n          <SummaryDiv>\n            {React.Children.toArray(\n              summaryKeys.map((item, i) => (\n                <SummaryRow style={i % 2 === 0 ? { background: '#cec' } : {}}>\n                  <TypeName>{item}</TypeName>\n                  <Sum>{localeBigInt(summary[item]?.sum)} 원</Sum>\n                </SummaryRow>\n              )),\n            )}\n          </SummaryDiv>\n        </>\n      ) : null}\n    </SheetSummaryWrapper>\n  )\n}\n\nconst SheetSummaryWrapper = styled.div`\n  padding: 20px 0;\n`\nconst SummaryTitle = styled.div`\n  font-weight: bold;\n`\nconst SummaryDiv = styled.div`\n  padding-top: 10px;\n`\nconst SummaryRow = styled.div`\n  padding: 2px 4px;\n  width: 250px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst TypeName = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: space-between;\n  width: 80px;\n  padding-right: 10px;\n  border-right: 1px solid #222;\n`\nconst Sum = styled.div`\n  display: inline-block;\n  padding-left: 10px;\n  text-align: right;\n  overflow-wrap: anywhere;\n`\n","import styled from '@emotion/styled'\nimport React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport Header from '../component/Header/Header'\nimport produce from 'immer'\n\nimport { getSheet, patchSheet } from '../api/sheet'\nimport RefreshButton from '../component/Button/RefreshButton'\nimport SheetTable from '../component/SheetPage/SheetTable'\nimport { animationDuration } from '../constant/constant'\nimport { Colors } from '../util/Colors'\nimport { addSnackBar, changeInputWidth } from '../util/util'\nimport LoadingDim from '../component/LoadingDim/LoadingDim'\nimport SheetSummary from '../component/SheetPage/SheetSummary'\n\nexport interface SheetDataInterface {\n  sheetId: number\n  name: string\n  order: number\n  table?: string[][]\n  types?: string[]\n}\n\n// 첫 데이터가 펫치됐을때 한번만 setInputWidth() 실행하기 위함\n\nexport default function SheetPage() {\n  const params = useParams()\n  const navigate = useNavigate()\n  const [sheetData, setSheetData] = useState<SheetDataInterface>()\n  const [loading, setLoading] = useState(false)\n  const [addedRow, setAddedRow] = useState<number>()\n  const [removedRow, setRemovedRow] = useState<number>()\n  const [beforeSetWidth, setBeforeSetWidth] = useState(true)\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 자동저장 스로틀\n  const changeRef = useRef(false) // 최초 변경사항 감지\n\n  const getSheetAndSet = useCallback(() => {\n    if (params.sheetId) {\n      setLoading(true)\n      getSheet(Number(params.sheetId)).then((res) => {\n        setLoading(false)\n        if (res) setSheetData(res)\n      })\n    }\n  }, [params.sheetId])\n\n  const handleChangeTitle = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      changeRef.current = true\n      // sheetData 업데이트\n      if (sheetData) {\n        const newSheetData = produce((draft) => {\n          if (draft) {\n            // size 변경\n            changeInputWidth(e.target)\n\n            draft.name = e.target.value\n            return draft\n          }\n        }, sheetData)\n        setSheetData(newSheetData)\n      }\n    },\n    [sheetData],\n  )\n  // 처음 한번만 전체 input width 설정하기\n  const changeInputWidthAll = useCallback(() => {\n    const inputs = document.querySelectorAll<HTMLInputElement>(\n      'input:not(.fakeInput)',\n    )\n    if (inputs) {\n      inputs.forEach((input) => {\n        changeInputWidth(input)\n      })\n      setBeforeSetWidth(false)\n    }\n    const selects = document.querySelectorAll<HTMLSelectElement>(\n      'select:not(.fakeSelect)',\n    )\n    if (selects) {\n      selects.forEach((select) => {\n        changeInputWidth(select, true)\n      })\n      setBeforeSetWidth(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    getSheetAndSet()\n  }, [getSheetAndSet])\n\n  // sheetData 바뀌고 beforeSetWidth가 true이면 input width 바꿔주기\n  useEffect(() => {\n    if (beforeSetWidth && sheetData) {\n      changeInputWidthAll()\n    }\n  }, [beforeSetWidth, changeInputWidthAll, sheetData])\n\n  // addRow 액션\n  useEffect(() => {\n    if (addedRow !== undefined) {\n      const tr = document.querySelector(`#row_${addedRow + 1}`)\n      if (tr) {\n        tr.classList.add('blink')\n        setAddedRow(undefined)\n        setTimeout(() => {\n          tr.classList.remove('blink')\n        }, animationDuration)\n      }\n    }\n  }, [addedRow])\n\n  // removeRow 액션\n  useEffect(() => {\n    if (sheetData && removedRow !== undefined) {\n      const tr = document.querySelector(`#row_${removedRow}`)\n      if (tr) {\n        tr.classList.add('blinkRed')\n        setTimeout(() => {\n          tr.classList.remove('blinkRed')\n          const nextState = produce(sheetData, (draft) => {\n            draft?.table?.splice(removedRow - 1, 1)\n          })\n          setSheetData(nextState)\n          setRemovedRow(undefined)\n        }, animationDuration)\n      }\n    }\n  }, [removedRow, sheetData])\n\n  const addRow = useCallback(\n    (row: number) => {\n      changeRef.current = true\n      const nextState = produce(sheetData, (draft) => {\n        draft?.table?.splice(row, 0, ['', '', '', ''])\n      })\n      setSheetData(nextState)\n      setAddedRow(row)\n    },\n    [sheetData],\n  )\n\n  const removeRow = useCallback((row: number) => {\n    changeRef.current = true\n    setRemovedRow(row)\n  }, [])\n\n  const saveSheet = useCallback(() => {\n    if (params.sheetId && sheetData) {\n      // setLoading(true)\n      patchSheet(Number(params.sheetId), sheetData).then((res) => {\n        // setLoading(false)\n        addSnackBar('자동 저장')\n      })\n    }\n  }, [params.sheetId, sheetData])\n\n  // 데이터 변경되면 2초 스로틀 방식으로 데이터 자동 저장\n  useEffect(() => {\n    if (changeRef.current === true) {\n      if (timeoutRef.current !== null) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        saveSheet()\n      }, 2000)\n    }\n  }, [saveSheet, sheetData])\n\n  return (\n    <>\n      <Header\n        title={\n          sheetData?.name !== undefined ? (\n            <HeaderInput value={sheetData?.name} onChange={handleChangeTitle} />\n          ) : null\n        }\n        backButton\n        backFunction={() => navigate('/', { replace: true })}\n      />\n      <SheetTable\n        sheetData={sheetData}\n        setSheetData={setSheetData}\n        addRow={addRow}\n        removeRow={removeRow}\n        changeRef={changeRef}\n      />\n      <SheetSummary sheetData={sheetData} setSheetData={setSheetData} />\n      <RefreshButton\n        refreshing={loading}\n        onClick={() => {\n          getSheetAndSet()\n          setBeforeSetWidth(true)\n          addSnackBar('새로고침 완료')\n        }}\n      />\n      <LoadingDim loading={loading} />\n    </>\n  )\n}\n\nconst HeaderInput = styled.input`\n  width: 100%;\n  min-width: 50px;\n  height: 24px;\n  border: 0;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    border-bottom: 1px solid ${Colors.greenLine};\n  }\n`\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["axiosInstance","Axios","baseURL","process","withCredentials","getSheets","get","res","data","getSheet","sheetId","postSheets","post","patchSheet","sheetData","patch","patchOrder","orderData","fromId","toId","deleteSheet","delete","RefreshButton","onClick","refreshing","RefreshButtonWrapper","disabled","Refresh","styled","animationDuration","SheetTable","setSheetData","addRow","removeRow","changeRef","sum","BigInt","defaultTypes","useMemo","useState","types","setTypes","useEffect","getType","then","handleInputChange","e","i","j","select","current","target","changeInputWidth","newSheetData","produce","draft","table","value","TableWrapper","AddIcon","fontSize","React","map","row","id","RemoveIcon","col","CommonSelect","onChange","height","type","parseToBigInt","CommonInput","numCheck","isBigInt","localeBigInt","toString","Colors","AddCircleOutlineIcon","RemoveCircleOutlineIcon","OpenColor","includes","stringToBig","str","removeComma","SheetSummary","summary","summaryKeys","obj","forEach","trim","undefined","order","before","after","String","keys","Object","sort","a","b","numA","Number","slice","indexOf","numB","isNaN","item","SheetSummaryWrapper","length","SummaryTitle","SummaryDiv","SummaryRow","style","background","TypeName","Sum","SheetPage","params","useParams","navigate","useNavigate","loading","setLoading","addedRow","setAddedRow","removedRow","setRemovedRow","beforeSetWidth","setBeforeSetWidth","timeoutRef","useRef","getSheetAndSet","useCallback","handleChangeTitle","name","changeInputWidthAll","inputs","document","querySelectorAll","input","selects","tr","querySelector","classList","add","setTimeout","remove","nextState","splice","saveSheet","addSnackBar","clearTimeout","Header","title","HeaderInput","backButton","backFunction","replace","LoadingDim","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}