{"version":3,"file":"static/js/495.ed684608.chunk.js","mappings":"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","sources":["api/queryKeys.ts","api/sheet.ts","component/SheetPage/SheetSummary.tsx","api/reactQuery.ts/useGetTypeQuery.ts","component/SheetPage/SheetTable.tsx","constant/constant.ts","component/Button/RefreshButton.tsx","page/SheetPage.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["export enum queryKeys {\n  getSheet = 'getSheet',\n  getType = 'getType',\n}\n","import Axios from 'axios'\nimport { SheetDataInterface } from '../page/SheetPage'\n\nconst axiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_API_URL + 'accountBook/sheet/',\n  withCredentials: true,\n})\n\nexport const getSheets = async () => {\n  let res = await axiosInstance.get<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const getSheet = async (sheetId: number) => {\n  let res = await axiosInstance.get<SheetDataInterface>(`${sheetId}`)\n  return res.data\n}\n\nexport const postSheets = async () => {\n  let res = await axiosInstance.post<SheetDataInterface[]>('')\n  return res.data\n}\n\nexport const patchSheet = async (\n  sheetId: number,\n  sheetData: SheetDataInterface,\n) => {\n  let res = await axiosInstance.patch<SheetDataInterface>(\n    `${sheetId}`,\n    sheetData,\n  )\n  return res.data\n}\n\n// sheet 순서 변경\nexport const patchOrder = async (orderData: sheetOrderInterface) => {\n  let res = await axiosInstance.patch(\n    `${orderData.fromId}/${orderData.toId}`,\n    orderData,\n  )\n  return res.data\n}\n\nexport const deleteSheet = async (sheetId: number) => {\n  let res = await axiosInstance.delete(`${sheetId}`)\n  return res.data\n}\n\nexport interface sheetOrderInterface {\n  fromId: number\n  toId: number\n}\n","import styled from '@emotion/styled'\nimport React, { useMemo, useRef } from 'react'\nimport { useGetTypeQuery } from '../../api/reactQuery.ts/useGetTypeQuery'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport { localeBigInt, parseToNumber, setFixed } from '../../util/util'\n\nexport default function SheetSummary({\n  sheetData,\n  setSheetData,\n}: {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n}) {\n  const income = useRef(0)\n  const sum = useRef(0)\n  const { data: types } = useGetTypeQuery()\n  const summary = useMemo(() => {\n    if (types) {\n      const summaryObj = types?.types.map(({ type }) => {\n        return {\n          type: type,\n          amount: 0,\n        }\n      })\n      income.current = 0\n      sum.current = 0\n      sheetData?.table?.forEach((row, i) => {\n        // 월급, 수입 저장\n        sum.current += parseToNumber(row[3])\n        if (row[0]?.includes('월급') || row[0]?.includes('수입')) {\n          income.current += parseToNumber(row[3])\n        }\n        //row[0]가 공백이 아니면 obj에 값 합산해서 저장\n        if (row[0]?.trim() !== '') {\n          summaryObj.forEach((item) => {\n            if (item.type.includes(row[0])) {\n              item.amount += parseToNumber(row[3])\n            }\n          })\n        }\n      })\n      return summaryObj\n    }\n    return []\n  }, [sheetData?.table, types])\n\n  return (\n    <SheetSummaryWrapper>\n      {summary.length > 0 ? (\n        <>\n          <SummaryTitle>요약</SummaryTitle>\n          <SummaryDiv>\n            {React.Children.toArray(\n              summary.map((item, i) => (\n                <>\n                  {summary[i]?.amount !== 0 && (\n                    <SummaryRow>\n                      <TypeName>{i !== 0 && `${i}.${item.type}`}</TypeName>\n                      <Sum>\n                        {`${localeBigInt(summary[i]?.amount)} 원`}\n                        <Percent>{`${Math.abs(\n                          setFixed(\n                            (parseToNumber(summary[i]?.amount) * 100) /\n                              (income.current !== 0\n                                ? income.current\n                                : sum.current),\n                            2,\n                          ),\n                        )}%`}</Percent>\n                      </Sum>\n                    </SummaryRow>\n                  )}\n                </>\n              )),\n            )}\n          </SummaryDiv>\n        </>\n      ) : null}\n    </SheetSummaryWrapper>\n  )\n}\n\nconst SheetSummaryWrapper = styled.div`\n  padding: 20px 0;\n`\nconst SummaryTitle = styled.div`\n  font-weight: bold;\n`\nconst SummaryDiv = styled.div`\n  padding-top: 10px;\n  & > div:nth-of-type(2n) {\n    background: #cec;\n  }\n`\nconst SummaryRow = styled.div`\n  padding: 2px 4px;\n  width: 300px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst TypeName = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: space-between;\n  width: 80px;\n  padding-right: 10px;\n  border-right: 1px solid #222;\n`\nconst Sum = styled.div`\n  display: flex;\n  padding-left: 10px;\n  text-align: right;\n  overflow-wrap: anywhere;\n`\nconst Percent = styled.div`\n  width: 60px;\n  margin-left: 4px;\n  border-left: 1px solid #222;\n`\n","import { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query'\nimport { queryKeys } from '../queryKeys'\nimport { getType, getTypeResponse } from '../type'\n\nexport const useGetTypeQuery = (options?: UseQueryOptions<getTypeResponse>) => {\n  return useQuery<getTypeResponse>(\n    [queryKeys.getType] as QueryKey,\n    getType,\n    options,\n  )\n}\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport { Colors } from '../../util/Colors'\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\nimport produce from 'immer'\nimport { SheetDataInterface } from '../../page/SheetPage'\nimport styled from '@emotion/styled'\nimport { animationDuration } from '../../constant/constant'\nimport {\n  changeInputWidth,\n  isBigInt,\n  localeBigInt,\n  parseToBigInt,\n} from '../../util/util'\nimport { getType, TypeInterface } from '../../api/type'\nimport OpenColor from 'open-color'\n\ninterface SheetTableInterface {\n  sheetData?: SheetDataInterface\n  setSheetData: React.Dispatch<\n    React.SetStateAction<SheetDataInterface | undefined>\n  >\n  addRow?: (row: number) => void\n  removeRow?: (row: number) => void\n  changeRef?: React.MutableRefObject<boolean>\n  readOnly?: boolean\n}\n\nexport default function SheetTable({\n  sheetData,\n  setSheetData,\n  addRow,\n  removeRow,\n  changeRef,\n  readOnly = false,\n}: SheetTableInterface) {\n  let sum = BigInt(0)\n  const [types, setTypes] = useState<TypeInterface[]>([])\n  const [beforeSetWidth, setBeforeSetWidth] = useState(true)\n\n  useEffect(() => {\n    getType().then((res) => {\n      setTypes(res.types)\n    })\n  }, [])\n\n  // 처음 한번만 전체 input width 설정하기\n  const changeInputWidthAll = useCallback(() => {\n    if (beforeSetWidth) {\n      const inputs = document.querySelectorAll<HTMLInputElement>(\n        'input:not(.fakeInput)',\n      )\n      if (inputs) {\n        inputs.forEach((input) => {\n          changeInputWidth(input)\n        })\n      }\n      const selects = document.querySelectorAll<HTMLSelectElement>(\n        'select:not(.fakeSelect)',\n      )\n      if (selects) {\n        selects.forEach((select) => {\n          changeInputWidth(select, true)\n        })\n      }\n      setBeforeSetWidth(false)\n    }\n  }, [beforeSetWidth])\n\n  // sheetData, types 있을때 beforeSetWidth가 true이면 input width 바꿔주기\n  useEffect(() => {\n    if (beforeSetWidth && sheetData && types?.length > 0) {\n      changeInputWidthAll()\n    }\n  }, [beforeSetWidth, changeInputWidthAll, sheetData, types])\n\n  // 이벤트와 인덱스를 받아서 sheetData에 저장\n  const handleInputChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    i: number,\n    j: number,\n    select = false,\n  ) => {\n    if (changeRef) changeRef.current = true\n    if (e.target) {\n      // input size 변경\n      changeInputWidth(e.target, select)\n\n      // sheetData 업데이트\n      const newSheetData = produce((draft) => {\n        if (draft && draft.table && draft.table[i]) {\n          draft.table[i][j] = e.target.value\n          return draft\n        }\n      }, sheetData)\n      setSheetData(newSheetData)\n    }\n  }\n\n  const setBackground = (value: string) => {\n    let back = ''\n    types.forEach(({ type, background }) => {\n      if (value && type && value.includes(type)) {\n        if (background?.startsWith('#')) back = background\n        else back = `#${background}`\n      }\n    })\n    return back\n  }\n\n  return (\n    <TableWrapper>\n      <table>\n        <tbody>\n          <tr>\n            {readOnly ? (\n              <th></th>\n            ) : (\n              <th onClick={() => addRow && addRow(0)}>\n                <AddIcon fontSize='small' />\n              </th>\n            )}\n            <th>번호</th>\n            <th>유형</th>\n            <th>날짜</th>\n            <th>제목</th>\n            <th>가격</th>\n            <th>합계</th>\n            <th></th>\n          </tr>\n          {React.Children.toArray(\n            sheetData?.table?.map((row, i) => (\n              <tr id={`row_${i + 1}`}>\n                {readOnly ? (\n                  <td></td>\n                ) : (\n                  <td\n                    onClick={() => {\n                      addRow && addRow(i + 1)\n                    }}\n                  >\n                    <AddIcon fontSize='small' />\n                  </td>\n                )}\n                <td>{i + 1}</td>\n                {React.Children.toArray(\n                  row.map((col, j) => {\n                    // 합계에 가격 더하기\n                    if (j === 0) {\n                      return (\n                        <td>\n                          {readOnly ? (\n                            <Background\n                              value={col}\n                              background={setBackground(col)}\n                              height='20px'\n                            >\n                              {col}\n                            </Background>\n                          ) : (\n                            <CommonSelect\n                              value={col}\n                              background={setBackground(col)}\n                              onChange={(e) => handleInputChange(e, i, j, true)}\n                              height='27px'\n                            >\n                              {React.Children.toArray(\n                                types.map(({ type }, k) => (\n                                  <option value={type}>\n                                    {k === 0 ? '' : `${k}.${type}`}\n                                  </option>\n                                )),\n                              )}\n                            </CommonSelect>\n                          )}\n                        </td>\n                      )\n                    }\n                    if (j === 3) {\n                      sum += parseToBigInt(col)\n                    }\n                    return (\n                      <td>\n                        {readOnly ? (\n                          j === 3 && isBigInt(col) && col !== '' ? (\n                            localeBigInt(col)\n                          ) : (\n                            col.toString()\n                          )\n                        ) : (\n                          <CommonInput\n                            numCheck={j === 3}\n                            value={\n                              j === 3 && isBigInt(col) && col !== ''\n                                ? localeBigInt(col)\n                                : col.toString()\n                            }\n                            height='28px'\n                            onChange={(e) => handleInputChange(e, i, j)}\n                          />\n                        )}\n                      </td>\n                    )\n                  }),\n                )}\n                <td>{localeBigInt(sum)}</td>\n                {readOnly ? (\n                  <td></td>\n                ) : (\n                  <td onClick={() => removeRow && removeRow(i + 1)}>\n                    <RemoveIcon fontSize='small' />\n                  </td>\n                )}\n              </tr>\n            )),\n          )}\n        </tbody>\n      </table>\n    </TableWrapper>\n  )\n}\n\nconst TableWrapper = styled.div`\n  min-width: 100%;\n  max-width: 200%;\n  overflow: auto;\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    border: 1px solid ${Colors.greenLine};\n  }\n  th {\n    background: ${Colors.greenLine};\n  }\n  th,\n  td {\n    border: 1px solid ${Colors.greenLine};\n    white-space: pre;\n    text-align: left;\n    padding: 2px;\n    min-width: 10px;\n  }\n  .blink {\n    @keyframes blink {\n      0% {\n        background: ${Colors.greenLine};\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blink ${animationDuration}ms;\n  }\n  .blinkRed {\n    @keyframes blinkRed {\n      0% {\n        background: red;\n      }\n      100% {\n        background: white;\n      }\n    }\n    animation: blinkRed ${animationDuration}ms;\n  }\n  th:nth-of-type(5),\n  th:nth-of-type(6),\n  th:nth-of-type(7) {\n    min-width: 60px;\n  }\n  td:nth-of-type(6),\n  td:nth-of-type(7),\n  td:nth-of-type(6) input,\n  td:nth-of-type(7) input {\n    text-align: right;\n  }\n  td:nth-of-type(3),\n  td:nth-of-type(4),\n  td:nth-of-type(5),\n  td:nth-of-type(6) {\n    padding: 0;\n  }\n`\nconst AddIcon = styled(AddCircleOutlineIcon)`\n  color: #7c7;\n`\nconst RemoveIcon = styled(RemoveCircleOutlineIcon)`\n  color: red;\n`\nexport const CommonInput = styled.input<{\n  height?: string\n  value?: string | number | BigInt\n  numCheck?: boolean\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    background: ${OpenColor.green[0]};\n  }\n  ${({ numCheck, value }) => {\n    return numCheck && !isBigInt(value) ? 'background: #fcc;' : ''\n  }}\n`\n\nconst CommonSelect = styled.select<{\n  value: string\n  height?: string\n  background?: string\n}>`\n  width: 100%;\n  min-width: 100%;\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  padding: 0 2px;\n  border: 0;\n  border-radius: 0;\n  outline: none;\n  background: transparent;\n  color: #222;\n  font: inherit;\n  background: ${({ background }) => background};\n`\n\nconst Background = styled.div<{\n  height?: string\n  value: string\n  background?: string\n}>`\n  height: ${({ height }) => (height ? `${height}` : '100%')};\n  background: ${({ background }) => background};\n`\n","export const animationDuration = 300\n","import styled from '@emotion/styled'\nimport RefreshIcon from '@mui/icons-material/Refresh'\n\nexport default function RefreshButton({\n  onClick,\n  refreshing,\n}: {\n  onClick: () => void\n  refreshing: boolean\n}) {\n  return (\n    <RefreshButtonWrapper onClick={onClick} disabled={refreshing}>\n      <RefreshIcon />\n    </RefreshButtonWrapper>\n  )\n}\n\nconst RefreshButtonWrapper = styled.button<{ disabled: boolean }>`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  @media (min-width: 500px) {\n    right: calc(50% - 230px);\n  }\n\n  padding: 5px;\n  width: 40px;\n  height: 40px;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #eee;\n  border-radius: 100%;\n\n  ${({ disabled }) => disabled && `animation: 500ms rotation infinite linear;`}\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  svg {\n    color: #aaa;\n    width: 100%;\n    height: 100%;\n  }\n`\n","import styled from '@emotion/styled'\nimport React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport Header from '../component/Header/Header'\nimport produce from 'immer'\n\nimport { getSheet, patchSheet } from '../api/sheet'\nimport RefreshButton from '../component/Button/RefreshButton'\nimport SheetTable from '../component/SheetPage/SheetTable'\nimport { animationDuration } from '../constant/constant'\nimport { Colors } from '../util/Colors'\nimport { addSnackBar, changeInputWidth } from '../util/util'\nimport LoadingDim from '../component/LoadingDim/LoadingDim'\nimport SheetSummary from '../component/SheetPage/SheetSummary'\n\nexport interface SheetDataInterface {\n  sheetId: number\n  name: string\n  order: number\n  table?: string[][]\n  types?: string[]\n}\n\n// 첫 데이터가 펫치됐을때 한번만 setInputWidth() 실행하기 위함\n\nexport default function SheetPage() {\n  const params = useParams()\n  const navigate = useNavigate()\n  const [sheetData, setSheetData] = useState<SheetDataInterface>()\n  const [loading, setLoading] = useState(false)\n  const [addedRow, setAddedRow] = useState<number>()\n  const [removedRow, setRemovedRow] = useState<number>()\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 자동저장 스로틀\n  const changeRef = useRef(false) // 최초 변경사항 감지\n\n  const getSheetAndSet = useCallback(() => {\n    if (params.sheetId) {\n      setLoading(true)\n      getSheet(Number(params.sheetId)).then((res) => {\n        setLoading(false)\n        if (res) setSheetData(res)\n      })\n    }\n  }, [params.sheetId])\n\n  const handleChangeTitle = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      changeRef.current = true\n      // sheetData 업데이트\n      if (sheetData) {\n        const newSheetData = produce((draft) => {\n          if (draft) {\n            // size 변경\n            changeInputWidth(e.target)\n\n            draft.name = e.target.value\n            return draft\n          }\n        }, sheetData)\n        setSheetData(newSheetData)\n      }\n    },\n    [sheetData],\n  )\n\n  useEffect(() => {\n    getSheetAndSet()\n  }, [getSheetAndSet])\n\n  // addRow 액션\n  useEffect(() => {\n    if (addedRow !== undefined) {\n      const tr = document.querySelector(`#row_${addedRow + 1}`)\n      if (tr) {\n        tr.classList.add('blink')\n        setAddedRow(undefined)\n        setTimeout(() => {\n          tr.classList.remove('blink')\n        }, animationDuration)\n      }\n    }\n  }, [addedRow])\n\n  // removeRow 액션\n  useEffect(() => {\n    if (sheetData && removedRow !== undefined) {\n      const tr = document.querySelector(`#row_${removedRow}`)\n      if (tr) {\n        tr.classList.add('blinkRed')\n        setTimeout(() => {\n          tr.classList.remove('blinkRed')\n          const nextState = produce(sheetData, (draft) => {\n            draft?.table?.splice(removedRow - 1, 1)\n          })\n          setSheetData(nextState)\n          setRemovedRow(undefined)\n        }, animationDuration)\n      }\n    }\n  }, [removedRow, sheetData])\n\n  const addRow = useCallback(\n    (row: number) => {\n      changeRef.current = true\n      const nextState = produce(sheetData, (draft) => {\n        draft?.table?.splice(row, 0, ['', '', '', ''])\n      })\n      setSheetData(nextState)\n      setAddedRow(row)\n    },\n    [sheetData],\n  )\n\n  const removeRow = useCallback((row: number) => {\n    changeRef.current = true\n    setRemovedRow(row)\n  }, [])\n\n  const saveSheet = useCallback(() => {\n    if (params.sheetId && sheetData) {\n      // setLoading(true)\n      patchSheet(Number(params.sheetId), sheetData).then((res) => {\n        // setLoading(false)\n        addSnackBar('자동 저장')\n      })\n    }\n  }, [params.sheetId, sheetData])\n\n  // 데이터 변경되면 2초 스로틀 방식으로 데이터 자동 저장\n  useEffect(() => {\n    if (changeRef.current === true) {\n      if (timeoutRef.current !== null) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        saveSheet()\n      }, 2000)\n    }\n  }, [saveSheet, sheetData])\n\n  return (\n    <>\n      <Header\n        title={\n          sheetData?.name !== undefined ? (\n            <HeaderInput value={sheetData?.name} onChange={handleChangeTitle} />\n          ) : null\n        }\n        backButton\n        backFunction={() => navigate('/', { replace: true })}\n      />\n      <SheetTable\n        sheetData={sheetData}\n        setSheetData={setSheetData}\n        addRow={addRow}\n        removeRow={removeRow}\n        changeRef={changeRef}\n      />\n      <SheetSummary sheetData={sheetData} setSheetData={setSheetData} />\n      <RefreshButton\n        refreshing={loading}\n        onClick={() => {\n          getSheetAndSet()\n          changeRef.current = false\n          addSnackBar('새로고침 완료')\n        }}\n      />\n      <LoadingDim loading={loading} />\n    </>\n  )\n}\n\nconst HeaderInput = styled.input`\n  width: 100%;\n  min-width: 50px;\n  height: 24px;\n  border: 0;\n  padding: 0 2px;\n  outline: none;\n  background: none;\n  font: inherit;\n  &:focus,\n  &:hover,\n  &:active {\n    border-bottom: 1px solid ${Colors.greenLine};\n  }\n`\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["queryKeys","axiosInstance","Axios","baseURL","process","withCredentials","getSheets","get","res","data","getSheet","sheetId","postSheets","post","patchSheet","sheetData","patch","patchOrder","orderData","fromId","toId","deleteSheet","delete","SheetSummary","options","income","setSheetData","useRef","sum","types","useQuery","getType","summary","useMemo","summaryObj","map","type","amount","current","table","forEach","row","i","parseToNumber","includes","trim","item","SheetSummaryWrapper","length","SummaryTitle","SummaryDiv","React","SummaryRow","TypeName","Sum","localeBigInt","Percent","Math","abs","setFixed","styled","SheetTable","addRow","removeRow","changeRef","readOnly","BigInt","useState","setTypes","beforeSetWidth","setBeforeSetWidth","useEffect","then","changeInputWidthAll","useCallback","inputs","document","querySelectorAll","input","changeInputWidth","selects","select","handleInputChange","e","j","target","newSheetData","produce","draft","value","setBackground","back","background","startsWith","TableWrapper","onClick","AddIcon","fontSize","id","col","Background","height","CommonSelect","onChange","k","parseToBigInt","isBigInt","toString","CommonInput","numCheck","RemoveIcon","Colors","animationDuration","AddCircleOutlineIcon","RemoveCircleOutlineIcon","RefreshButton","refreshing","RefreshButtonWrapper","disabled","Refresh","SheetPage","params","useParams","navigate","useNavigate","loading","setLoading","addedRow","setAddedRow","removedRow","setRemovedRow","timeoutRef","getSheetAndSet","Number","handleChangeTitle","name","undefined","tr","querySelector","classList","add","setTimeout","remove","nextState","splice","saveSheet","addSnackBar","clearTimeout","Header","title","HeaderInput","backButton","backFunction","replace","LoadingDim","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}