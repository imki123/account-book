{"version":3,"file":"static/js/495.16067da8.chunk.js","mappings":"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","sources":["api/queryKeys.ts","api/sheet.ts","component/SheetPage/SheetSummary.tsx","api/reactQuery.ts/useGetTypeQuery.ts","component/SheetPage/SheetTable.tsx","constant/constant.ts","component/Button/RefreshButton.tsx","page/SheetPage.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["export enum queryKeys {\r\n  getSheet = 'getSheet',\r\n  getType = 'getType',\r\n}\r\n","import Axios from 'axios'\r\nimport { SheetDataInterface } from '../page/SheetPage'\r\nimport { api_url } from './account'\r\n\r\nconst axiosInstance = Axios.create({\r\n  baseURL: api_url + 'accountBook/sheet/',\r\n  withCredentials: true,\r\n})\r\n\r\nexport const getSheets = async () => {\r\n  let res = await axiosInstance.get<SheetDataInterface[]>('')\r\n  return res.data\r\n}\r\n\r\nexport const getSheet = async (sheetId: number) => {\r\n  let res = await axiosInstance.get<SheetDataInterface>(`${sheetId}`)\r\n  return res.data\r\n}\r\n\r\nexport const postSheets = async () => {\r\n  let res = await axiosInstance.post<SheetDataInterface[]>('')\r\n  return res.data\r\n}\r\n\r\nexport const patchSheet = async (\r\n  sheetId: number,\r\n  sheetData: SheetDataInterface,\r\n) => {\r\n  let res = await axiosInstance.patch<SheetDataInterface>(\r\n    `${sheetId}`,\r\n    sheetData,\r\n  )\r\n  return res.data\r\n}\r\n\r\n// sheet 순서 변경\r\nexport const patchOrder = async (orderData: sheetOrderInterface) => {\r\n  let res = await axiosInstance.patch(\r\n    `${orderData.fromId}/${orderData.toId}`,\r\n    orderData,\r\n  )\r\n  return res.data\r\n}\r\n\r\nexport const deleteSheet = async (sheetId: number) => {\r\n  let res = await axiosInstance.delete(`${sheetId}`)\r\n  return res.data\r\n}\r\n\r\nexport interface sheetOrderInterface {\r\n  fromId: number\r\n  toId: number\r\n}\r\n","import styled from '@emotion/styled'\r\nimport React, { useMemo, useRef } from 'react'\r\nimport { useGetTypeQuery } from '../../api/reactQuery.ts/useGetTypeQuery'\r\nimport { SheetDataInterface } from '../../page/SheetPage'\r\nimport { localeBigInt, parseToNumber, setFixed } from '../../util/util'\r\n\r\nexport default function SheetSummary({\r\n  sheetData,\r\n  setSheetData,\r\n}: {\r\n  sheetData?: SheetDataInterface\r\n  setSheetData: React.Dispatch<\r\n    React.SetStateAction<SheetDataInterface | undefined>\r\n  >\r\n}) {\r\n  const income = useRef(0)\r\n  const sum = useRef(0)\r\n  const { data: types } = useGetTypeQuery()\r\n  const summary = useMemo(() => {\r\n    if (types) {\r\n      const summaryObj = types?.types.map(({ type }) => {\r\n        return {\r\n          type: type,\r\n          amount: 0,\r\n        }\r\n      })\r\n      income.current = 0\r\n      sum.current = 0\r\n      sheetData?.table?.forEach((row, i) => {\r\n        // 월급, 수입 저장\r\n        sum.current += parseToNumber(row[3])\r\n        if (row[0]?.includes('월급') || row[0]?.includes('수입')) {\r\n          income.current += parseToNumber(row[3])\r\n        }\r\n        //row[0]가 공백이 아니면 obj에 값 합산해서 저장\r\n        if (row[0]?.trim() !== '') {\r\n          summaryObj.forEach((item) => {\r\n            if (item.type.includes(row[0])) {\r\n              item.amount += parseToNumber(row[3])\r\n            }\r\n          })\r\n        }\r\n      })\r\n      return summaryObj\r\n    }\r\n    return []\r\n  }, [sheetData?.table, types])\r\n\r\n  return (\r\n    <SheetSummaryWrapper>\r\n      {summary.length > 0 ? (\r\n        <>\r\n          <SummaryTitle>요약</SummaryTitle>\r\n          <SummaryDiv>\r\n            {React.Children.toArray(\r\n              summary.map((item, i) => (\r\n                <>\r\n                  {summary[i]?.amount !== 0 && (\r\n                    <SummaryRow>\r\n                      <TypeName>{i !== 0 && `${i}.${item.type}`}</TypeName>\r\n                      <Sum>\r\n                        {`${localeBigInt(summary[i]?.amount)} 원`}\r\n                        <Percent>{`${Math.abs(\r\n                          setFixed(\r\n                            (parseToNumber(summary[i]?.amount) * 100) /\r\n                              (income.current !== 0\r\n                                ? income.current\r\n                                : sum.current),\r\n                            2,\r\n                          ),\r\n                        )}%`}</Percent>\r\n                      </Sum>\r\n                    </SummaryRow>\r\n                  )}\r\n                </>\r\n              )),\r\n            )}\r\n          </SummaryDiv>\r\n        </>\r\n      ) : null}\r\n    </SheetSummaryWrapper>\r\n  )\r\n}\r\n\r\nconst SheetSummaryWrapper = styled.div`\r\n  padding: 20px 0;\r\n`\r\nconst SummaryTitle = styled.div`\r\n  font-weight: bold;\r\n`\r\nconst SummaryDiv = styled.div`\r\n  padding-top: 10px;\r\n  & > div:nth-of-type(2n) {\r\n    background: #cec;\r\n  }\r\n`\r\nconst SummaryRow = styled.div`\r\n  padding: 2px 4px;\r\n  width: 300px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nconst TypeName = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  justify-content: space-between;\r\n  width: 80px;\r\n  padding-right: 10px;\r\n  border-right: 1px solid #222;\r\n`\r\nconst Sum = styled.div`\r\n  display: flex;\r\n  padding-left: 10px;\r\n  text-align: right;\r\n  overflow-wrap: anywhere;\r\n`\r\nconst Percent = styled.div`\r\n  width: 60px;\r\n  margin-left: 4px;\r\n  border-left: 1px solid #222;\r\n`\r\n","import { QueryKey, useQuery, UseQueryOptions } from '@tanstack/react-query'\r\nimport { queryKeys } from '../queryKeys'\r\nimport { getType, getTypeResponse } from '../type'\r\n\r\nexport const useGetTypeQuery = (options?: UseQueryOptions<getTypeResponse>) => {\r\n  return useQuery<getTypeResponse>(\r\n    [queryKeys.getType] as QueryKey,\r\n    getType,\r\n    options,\r\n  )\r\n}\r\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react'\r\nimport { Colors } from '../../util/Colors'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\r\nimport produce from 'immer'\r\nimport { SheetDataInterface } from '../../page/SheetPage'\r\nimport styled from '@emotion/styled'\r\nimport { animationDuration } from '../../constant/constant'\r\nimport {\r\n  changeInputWidth,\r\n  isBigInt,\r\n  localeBigInt,\r\n  parseToBigInt,\r\n} from '../../util/util'\r\nimport { getType, TypeInterface } from '../../api/type'\r\nimport OpenColor from 'open-color'\r\n\r\ninterface SheetTableInterface {\r\n  sheetData?: SheetDataInterface\r\n  setSheetData: React.Dispatch<\r\n    React.SetStateAction<SheetDataInterface | undefined>\r\n  >\r\n  addRow?: (row: number) => void\r\n  removeRow?: (row: number) => void\r\n  changeRef?: React.MutableRefObject<boolean>\r\n  readOnly?: boolean\r\n}\r\n\r\nexport default function SheetTable({\r\n  sheetData,\r\n  setSheetData,\r\n  addRow,\r\n  removeRow,\r\n  changeRef,\r\n  readOnly = false,\r\n}: SheetTableInterface) {\r\n  let sum = BigInt(0)\r\n  const [types, setTypes] = useState<TypeInterface[]>([])\r\n  const [beforeSetWidth, setBeforeSetWidth] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getType().then((res) => {\r\n      setTypes(res.types)\r\n    })\r\n  }, [])\r\n\r\n  // 처음 한번만 전체 input width 설정하기\r\n  const changeInputWidthAll = useCallback(() => {\r\n    if (beforeSetWidth) {\r\n      const inputs =\r\n        document.querySelectorAll<HTMLInputElement>('input.autoWidth')\r\n      if (inputs) {\r\n        inputs.forEach((input) => {\r\n          changeInputWidth(input)\r\n        })\r\n      }\r\n      const selects =\r\n        document.querySelectorAll<HTMLSelectElement>('select.autoWidth')\r\n      if (selects) {\r\n        selects.forEach((select) => {\r\n          changeInputWidth(select, true)\r\n        })\r\n      }\r\n      setBeforeSetWidth(false)\r\n    }\r\n  }, [beforeSetWidth])\r\n\r\n  // sheetData, types 있을때 beforeSetWidth가 true이면 input width 바꿔주기\r\n  useEffect(() => {\r\n    if (beforeSetWidth && sheetData && types?.length > 0) {\r\n      changeInputWidthAll()\r\n    }\r\n  }, [beforeSetWidth, changeInputWidthAll, sheetData, types])\r\n\r\n  // 이벤트와 인덱스를 받아서 sheetData에 저장\r\n  const handleInputChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\r\n    i: number,\r\n    j: number,\r\n    select = false,\r\n  ) => {\r\n    if (changeRef) changeRef.current = true\r\n    if (e.target) {\r\n      // input size 변경\r\n      changeInputWidth(e.target, select)\r\n\r\n      // sheetData 업데이트\r\n      const newSheetData = produce((draft) => {\r\n        if (draft && draft.table && draft.table[i]) {\r\n          draft.table[i][j] = e.target.value\r\n          return draft\r\n        }\r\n      }, sheetData)\r\n      setSheetData(newSheetData)\r\n    }\r\n  }\r\n\r\n  const setBackground = (value: string) => {\r\n    let back = ''\r\n    types.forEach(({ type, background }) => {\r\n      if (value && type && value.includes(type)) {\r\n        if (background?.startsWith('#')) back = background\r\n        else back = `#${background}`\r\n      }\r\n    })\r\n    return back\r\n  }\r\n\r\n  return (\r\n    <TableWrapper>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            {readOnly ? (\r\n              <th></th>\r\n            ) : (\r\n              <th onClick={() => addRow && addRow(0)}>\r\n                <AddIcon fontSize='small' />\r\n              </th>\r\n            )}\r\n            <th>번호</th>\r\n            <th>유형</th>\r\n            <th>날짜</th>\r\n            <th>제목</th>\r\n            <th>가격</th>\r\n            <th>합계</th>\r\n            <th></th>\r\n          </tr>\r\n          {React.Children.toArray(\r\n            sheetData?.table?.map((row, i) => (\r\n              <tr id={`row_${i + 1}`}>\r\n                {readOnly ? (\r\n                  <td></td>\r\n                ) : (\r\n                  <td\r\n                    onClick={() => {\r\n                      addRow && addRow(i + 1)\r\n                    }}\r\n                  >\r\n                    <AddIcon fontSize='small' />\r\n                  </td>\r\n                )}\r\n                <td>{i + 1}</td>\r\n                {React.Children.toArray(\r\n                  row.map((col, j) => {\r\n                    // 합계에 가격 더하기\r\n                    if (j === 0) {\r\n                      return (\r\n                        <td>\r\n                          {readOnly ? (\r\n                            <Background\r\n                              value={col}\r\n                              background={setBackground(col)}\r\n                              height='20px'\r\n                            >\r\n                              {col}\r\n                            </Background>\r\n                          ) : (\r\n                            <CommonSelect\r\n                              className='autoWidth'\r\n                              value={col}\r\n                              background={setBackground(col)}\r\n                              onChange={(e) => handleInputChange(e, i, j, true)}\r\n                              height='27px'\r\n                            >\r\n                              {React.Children.toArray(\r\n                                types.map(({ type }, k) => (\r\n                                  <option value={type}>\r\n                                    {k === 0 ? '' : `${k}.${type}`}\r\n                                  </option>\r\n                                )),\r\n                              )}\r\n                            </CommonSelect>\r\n                          )}\r\n                        </td>\r\n                      )\r\n                    }\r\n                    if (j === 3) {\r\n                      sum += parseToBigInt(col)\r\n                    }\r\n                    return (\r\n                      <td>\r\n                        {readOnly ? (\r\n                          j === 3 && isBigInt(col) && col !== '' ? (\r\n                            localeBigInt(col)\r\n                          ) : (\r\n                            col.toString()\r\n                          )\r\n                        ) : (\r\n                          <CommonInput\r\n                            className='autoWidth'\r\n                            numCheck={j === 3}\r\n                            value={\r\n                              j === 3 && isBigInt(col) && col !== ''\r\n                                ? localeBigInt(col)\r\n                                : col.toString()\r\n                            }\r\n                            height='28px'\r\n                            onChange={(e) => handleInputChange(e, i, j)}\r\n                          />\r\n                        )}\r\n                      </td>\r\n                    )\r\n                  }),\r\n                )}\r\n                <td>{localeBigInt(sum)}</td>\r\n                {readOnly ? (\r\n                  <td></td>\r\n                ) : (\r\n                  <td onClick={() => removeRow && removeRow(i + 1)}>\r\n                    <RemoveIcon fontSize='small' />\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            )),\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </TableWrapper>\r\n  )\r\n}\r\n\r\nconst TableWrapper = styled.div`\r\n  min-width: 100%;\r\n  max-width: 200%;\r\n  overflow: auto;\r\n\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    border: 1px solid ${Colors.greenLine};\r\n  }\r\n  th {\r\n    background: ${Colors.greenLine};\r\n  }\r\n  th,\r\n  td {\r\n    border: 1px solid ${Colors.greenLine};\r\n    white-space: pre;\r\n    text-align: left;\r\n    padding: 2px;\r\n    min-width: 10px;\r\n  }\r\n  .blink {\r\n    @keyframes blink {\r\n      0% {\r\n        background: ${Colors.greenLine};\r\n      }\r\n      100% {\r\n        background: white;\r\n      }\r\n    }\r\n    animation: blink ${animationDuration}ms;\r\n  }\r\n  .blinkRed {\r\n    @keyframes blinkRed {\r\n      0% {\r\n        background: red;\r\n      }\r\n      100% {\r\n        background: white;\r\n      }\r\n    }\r\n    animation: blinkRed ${animationDuration}ms;\r\n  }\r\n  th:nth-of-type(5),\r\n  th:nth-of-type(6),\r\n  th:nth-of-type(7) {\r\n    min-width: 60px;\r\n  }\r\n  td:nth-of-type(6),\r\n  td:nth-of-type(7),\r\n  td:nth-of-type(6) input,\r\n  td:nth-of-type(7) input {\r\n    text-align: right;\r\n  }\r\n  td:nth-of-type(3),\r\n  td:nth-of-type(4),\r\n  td:nth-of-type(5),\r\n  td:nth-of-type(6) {\r\n    padding: 0;\r\n  }\r\n  td:nth-of-type(4) input {\r\n    max-width: 30px;\r\n  }\r\n`\r\nconst AddIcon = styled(AddCircleOutlineIcon)`\r\n  color: #7c7;\r\n`\r\nconst RemoveIcon = styled(RemoveCircleOutlineIcon)`\r\n  color: red;\r\n`\r\nexport const CommonInput = styled.input<{\r\n  height?: string\r\n  value?: string | number | BigInt\r\n  numCheck?: boolean\r\n}>`\r\n  width: 100%;\r\n  min-width: 100%;\r\n  height: ${({ height }) => (height ? `${height}` : '100%')};\r\n  padding: 0 2px;\r\n  border: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  background: none;\r\n  font: inherit;\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    background: ${OpenColor.green[0]};\r\n  }\r\n  ${({ numCheck, value }) => {\r\n    return numCheck && !isBigInt(value) ? 'background: #fcc;' : ''\r\n  }}\r\n`\r\n\r\nconst CommonSelect = styled.select<{\r\n  value: string\r\n  height?: string\r\n  background?: string\r\n}>`\r\n  width: 100%;\r\n  min-width: 100%;\r\n  height: ${({ height }) => (height ? `${height}` : '100%')};\r\n  padding: 0 2px;\r\n  border: 0;\r\n  border-radius: 0;\r\n  outline: none;\r\n  background: transparent;\r\n  color: #222;\r\n  font: inherit;\r\n  background: ${({ background }) => background};\r\n`\r\n\r\nconst Background = styled.div<{\r\n  height?: string\r\n  value: string\r\n  background?: string\r\n}>`\r\n  height: ${({ height }) => (height ? `${height}` : '100%')};\r\n  background: ${({ background }) => background};\r\n`\r\n","export const animationDuration = 300\r\n","import styled from '@emotion/styled'\r\nimport RefreshIcon from '@mui/icons-material/Refresh'\r\n\r\nexport default function RefreshButton({\r\n  onClick,\r\n  refreshing,\r\n}: {\r\n  onClick: () => void\r\n  refreshing: boolean\r\n}) {\r\n  return (\r\n    <RefreshButtonWrapper onClick={onClick} disabled={refreshing}>\r\n      <RefreshIcon />\r\n    </RefreshButtonWrapper>\r\n  )\r\n}\r\n\r\nconst RefreshButtonWrapper = styled.button<{ disabled: boolean }>`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  @media (min-width: 1000px) {\r\n    right: calc(50% - (1000px / 2) + 20px);\r\n  }\r\n\r\n  padding: 5px;\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  overflow: hidden;\r\n  background: white;\r\n  border: 2px solid #eee;\r\n  border-radius: 100%;\r\n\r\n  ${({ disabled }) => disabled && `animation: 500ms rotation infinite linear;`}\r\n  @keyframes rotation {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  svg {\r\n    color: #aaa;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\n","import styled from '@emotion/styled'\r\nimport React, {\r\n  ChangeEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Header from '../component/Header/Header'\r\nimport produce from 'immer'\r\n\r\nimport { getSheet, patchSheet } from '../api/sheet'\r\nimport RefreshButton from '../component/Button/RefreshButton'\r\nimport SheetTable from '../component/SheetPage/SheetTable'\r\nimport { animationDuration } from '../constant/constant'\r\nimport { Colors } from '../util/Colors'\r\nimport { addSnackBar, changeInputWidth } from '../util/util'\r\nimport LoadingDim from '../component/LoadingDim/LoadingDim'\r\nimport SheetSummary from '../component/SheetPage/SheetSummary'\r\n\r\nexport interface SheetDataInterface {\r\n  sheetId: number\r\n  name: string\r\n  order: number\r\n  table?: string[][]\r\n  types?: string[]\r\n}\r\n\r\n// 첫 데이터가 펫치됐을때 한번만 setInputWidth() 실행하기 위함\r\n\r\nexport default function SheetPage() {\r\n  const params = useParams()\r\n  const navigate = useNavigate()\r\n  const [sheetData, setSheetData] = useState<SheetDataInterface>()\r\n  const [loading, setLoading] = useState(false)\r\n  const [addedRow, setAddedRow] = useState<number>()\r\n  const [removedRow, setRemovedRow] = useState<number>()\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null) // 자동저장 스로틀\r\n  const changeRef = useRef(false) // 최초 변경사항 감지\r\n\r\n  const getSheetAndSet = useCallback(() => {\r\n    if (params.sheetId) {\r\n      setLoading(true)\r\n      getSheet(Number(params.sheetId)).then((res) => {\r\n        setLoading(false)\r\n        if (res) setSheetData(res)\r\n      })\r\n    }\r\n  }, [params.sheetId])\r\n\r\n  const handleChangeTitle = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => {\r\n      changeRef.current = true\r\n      // sheetData 업데이트\r\n      if (sheetData) {\r\n        const newSheetData = produce((draft) => {\r\n          if (draft) {\r\n            // size 변경\r\n            changeInputWidth(e.target)\r\n\r\n            draft.name = e.target.value\r\n            return draft\r\n          }\r\n        }, sheetData)\r\n        setSheetData(newSheetData)\r\n      }\r\n    },\r\n    [sheetData],\r\n  )\r\n\r\n  useEffect(() => {\r\n    getSheetAndSet()\r\n  }, [getSheetAndSet])\r\n\r\n  // addRow 액션\r\n  useEffect(() => {\r\n    if (addedRow !== undefined) {\r\n      const tr = document.querySelector(`#row_${addedRow + 1}`)\r\n      if (tr) {\r\n        tr.classList.add('blink')\r\n        setAddedRow(undefined)\r\n        setTimeout(() => {\r\n          tr.classList.remove('blink')\r\n        }, animationDuration)\r\n      }\r\n    }\r\n  }, [addedRow])\r\n\r\n  // removeRow 액션\r\n  useEffect(() => {\r\n    if (sheetData && removedRow !== undefined) {\r\n      const tr = document.querySelector(`#row_${removedRow}`)\r\n      if (tr) {\r\n        tr.classList.add('blinkRed')\r\n        setTimeout(() => {\r\n          tr.classList.remove('blinkRed')\r\n          const nextState = produce(sheetData, (draft) => {\r\n            draft?.table?.splice(removedRow - 1, 1)\r\n          })\r\n          setSheetData(nextState)\r\n          setRemovedRow(undefined)\r\n        }, animationDuration)\r\n      }\r\n    }\r\n  }, [removedRow, sheetData])\r\n\r\n  const addRow = useCallback(\r\n    (row: number) => {\r\n      changeRef.current = true\r\n      const nextState = produce(sheetData, (draft) => {\r\n        draft?.table?.splice(row, 0, ['', '', '', ''])\r\n      })\r\n      setSheetData(nextState)\r\n      setAddedRow(row)\r\n    },\r\n    [sheetData],\r\n  )\r\n\r\n  const removeRow = useCallback((row: number) => {\r\n    changeRef.current = true\r\n    setRemovedRow(row)\r\n  }, [])\r\n\r\n  const saveSheet = useCallback(() => {\r\n    if (params.sheetId && sheetData) {\r\n      // setLoading(true)\r\n      patchSheet(Number(params.sheetId), sheetData).then((res) => {\r\n        // setLoading(false)\r\n        addSnackBar('자동 저장')\r\n      })\r\n    }\r\n  }, [params.sheetId, sheetData])\r\n\r\n  // 데이터 변경되면 2초 스로틀 방식으로 데이터 자동 저장\r\n  useEffect(() => {\r\n    if (changeRef.current === true) {\r\n      if (timeoutRef.current !== null) {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n      timeoutRef.current = setTimeout(() => {\r\n        timeoutRef.current = null\r\n        saveSheet()\r\n      }, 2000)\r\n    }\r\n  }, [saveSheet, sheetData])\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={\r\n          sheetData?.name !== undefined ? (\r\n            <HeaderInput value={sheetData?.name} onChange={handleChangeTitle} />\r\n          ) : null\r\n        }\r\n        backButton\r\n        backFunction={() => navigate('/', { replace: true })}\r\n      />\r\n      <SheetTable\r\n        sheetData={sheetData}\r\n        setSheetData={setSheetData}\r\n        addRow={addRow}\r\n        removeRow={removeRow}\r\n        changeRef={changeRef}\r\n      />\r\n      <SheetSummary sheetData={sheetData} setSheetData={setSheetData} />\r\n      <RefreshButton\r\n        refreshing={loading}\r\n        onClick={() => {\r\n          getSheetAndSet()\r\n          changeRef.current = false\r\n          addSnackBar('새로고침 완료')\r\n        }}\r\n      />\r\n      <LoadingDim loading={loading} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst HeaderInput = styled.input`\r\n  width: 100%;\r\n  min-width: 50px;\r\n  height: 24px;\r\n  border: 0;\r\n  padding: 0 2px;\r\n  outline: none;\r\n  background: none;\r\n  font: inherit;\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    border-bottom: 1px solid ${Colors.greenLine};\r\n  }\r\n`\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["queryKeys","axiosInstance","Axios","baseURL","api_url","withCredentials","getSheets","get","res","data","getSheet","sheetId","postSheets","post","patchSheet","sheetData","patch","patchOrder","orderData","fromId","toId","deleteSheet","delete","SheetSummary","options","income","setSheetData","useRef","sum","types","useQuery","getType","summary","useMemo","summaryObj","map","type","amount","current","table","forEach","row","i","parseToNumber","includes","trim","item","SheetSummaryWrapper","length","SummaryTitle","SummaryDiv","React","SummaryRow","TypeName","Sum","localeBigInt","Percent","Math","abs","setFixed","styled","SheetTable","addRow","removeRow","changeRef","readOnly","BigInt","useState","setTypes","beforeSetWidth","setBeforeSetWidth","useEffect","then","changeInputWidthAll","useCallback","inputs","document","querySelectorAll","input","changeInputWidth","selects","select","handleInputChange","e","j","target","newSheetData","produce","draft","value","setBackground","back","background","startsWith","TableWrapper","onClick","AddIcon","fontSize","id","col","Background","height","CommonSelect","className","onChange","k","parseToBigInt","isBigInt","toString","CommonInput","numCheck","RemoveIcon","Colors","animationDuration","AddCircleOutlineIcon","RemoveCircleOutlineIcon","RefreshButton","refreshing","RefreshButtonWrapper","disabled","Refresh","SheetPage","params","useParams","navigate","useNavigate","loading","setLoading","addedRow","setAddedRow","removedRow","setRemovedRow","timeoutRef","getSheetAndSet","Number","handleChangeTitle","name","undefined","tr","querySelector","classList","add","setTimeout","remove","nextState","splice","saveSheet","addSnackBar","clearTimeout","Header","title","HeaderInput","backButton","backFunction","replace","LoadingDim","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}